# =====================================================================
# 🧲 Přízemí – Michal: zachytávání poslední KOMFORTNÍ teploty
# - Sleduje změny setpointu na hlavici (climate.danfoss_etrv0103.temperature)
# - Pokud nová teplota > ECO, uloží ji do input_number.prizemi_michal_last_comfort
# - Tím pádem se při návratu z ECO vrátí opravdu poslední používaná komfortní teplota
# =====================================================================

automation:
  - alias: "Zachytni poslední komfort – Přízemí Michal"
    id: prizemi_michal_capture_last_comfort
    mode: restart
    initial_state: true

    # 🔔 Spouštěč: změna žádané teploty na hlavici
    trigger:
      - platform: state
        entity_id: climate.danfoss_etrv0103
        attribute: temperature

    variables:
      new_set: "{{ state_attr('climate.danfoss_etrv0103', 'temperature') | float(0) }}"
      eco: "{{ states('input_number.eco_temp_default') | float(18) }}"

    # ✅ Ukládáme jen KOMFORT (tj. > ECO + malá hystereze, aby 18.0 neprolezlo)
    condition:
      - condition: template
        value_template: "{{ new_set >= (eco + 0.2) }}"

    # 💾 Zapiš poslední komfortní teplotu do helperu
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.prizemi_michal_last_comfort
        data:
          value: "{{ new_set }}"
