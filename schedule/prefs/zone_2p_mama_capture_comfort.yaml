# =====================================================================
# 🧲 2. patro – Máma: zachytávání poslední KOMFORTNÍ teploty
# ---------------------------------------------------------------------
# 🔍 Cíl:
# Tato automatizace sleduje, kdy Michal ručně (nebo přes rozvrh)
# změní teplotu na hlavici. Pokud nová hodnota odpovídá komfortnímu
# režimu (tj. je vyšší než ECO teplota), uloží se do helperu
# `input_number.prizemi_michal_last_comfort`.
#
# ➕ Díky tomu se při návratu z ECO módu (např. po odchodu nebo v noci)
# může automaticky obnovit právě ta poslední komfortní teplota,
# kterou uživatel naposledy použil.
# =====================================================================

automation:
  - alias: "Zachytni poslední komfort – 2. patro Máma"
    id: capture_last_comfort_2p_mama
    mode: restart
    initial_state: true

    # 🔔 Spouštěč:
    # Sleduje změny atributu `temperature` na hlavici Danfoss.
    # Jakmile uživatel (nebo automatizace) změní žádanou teplotu,
    # automatizace se spustí.
    trigger:
      - platform: state
        entity_id: climate.danfoss_etrv0103_2
        attribute: temperature

    # 📦 Proměnné:
    # `new_set` → nová žádaná teplota na hlavici.
    # `eco` → hodnota ECO teploty z globálního helperu (typicky 18 °C).
    variables:
      new_set: "{{ state_attr('climate.danfoss_etrv0103_2', 'temperature') | float(0) }}"
      eco: "{{ states('input_number.eco_temp_default') | float(18) }}"

    # ✅ Podmínka:
    # Uloží se jen teplota, která je o něco vyšší než ECO (např. > 18.2 °C),
    # aby se neukládaly hodnoty z ECO režimu nebo drobné přechody.
    condition:
      - condition: template
        value_template: "{{ new_set >= (eco + 0.2) }}"

    # 💾 Akce:
    # Zapisuje zachycenou komfortní teplotu do helperu
    # `input_number.prizemi_michal_last_comfort`.
    # Tato hodnota se pak může použít při návratu z ECO.
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.2p_mama_last_comfort
        data:
          value: "{{ new_set }}"