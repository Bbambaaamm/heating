# =====================================================================
# üß≤ 2. patro ‚Äì M√°ma: zachyt√°v√°n√≠ posledn√≠ KOMFORTN√ç teploty
# ---------------------------------------------------------------------
# üîç C√≠l:
# Tato automatizace sleduje, kdy M√°ma ruƒçnƒõ (nebo p≈ôes rozvrh)
# zmƒõn√≠ teplotu na hlavici. Pokud nov√° hodnota odpov√≠d√° komfortn√≠mu
# re≈æimu (tj. je vy≈°≈°√≠ ne≈æ ECO teplota), ulo≈æ√≠ se do helperu
# `capture_last_comfort_2p_mama`.
#
# ‚ûï D√≠ky tomu se p≈ôi n√°vratu z ECO m√≥du (nap≈ô. po odchodu nebo v noci)
# m≈Ø≈æe automaticky obnovit pr√°vƒõ ta posledn√≠ komfortn√≠ teplota,
# kterou u≈æivatel naposledy pou≈æil.
# =====================================================================

automation:
  - alias: "Zachytni posledn√≠ komfort ‚Äì 2. patro M√°ma"     # N√°zev automatizace
    id: capture_last_comfort_2p_mama                       # Jednoznaƒçn√© ID pro syst√©m
    mode: restart                                          # Restartne bƒõh p≈ôi nov√© zmƒõnƒõ
    initial_state: true                                    # Automatizace je aktivn√≠ po restartu HA

    # Spou≈°tƒõƒç: reaguje na zmƒõnu ≈æ√°dan√© teploty na hlavici
    trigger:
      - platform: state                                    # Sleduje zmƒõnu stavu/atributu
        entity_id: climate.danfoss_etrv0103_2              # C√≠lov√° hlavice (Michal ‚Äì p≈ô√≠zem√≠)
        attribute: temperature                             # Sledujeme atribut ‚Äûtemperature‚Äú (≈æ√°dan√° teplota)

    # Promƒõnn√© pro v√Ωpoƒçet
    variables:
      new_set: "{{ state_attr('climate.danfoss_etrv0103_2', 'temperature') | float(0) }}"  # Novƒõ nastaven√° teplota
      eco: "{{ states('input_number.eco_temp_default') | float(18) }}"                     # ECO teplota z glob√°ln√≠ho helperu

    # Podm√≠nka: ukl√°d√° se pouze komfortn√≠ teplota (vƒõt≈°√≠ ne≈æ ECO + 0.2 ¬∞C)
    condition:
      - condition: template
        value_template: "{{ new_set >= (eco + 0.2) }}"     # Hystereze 0.2 ¬∞C br√°n√≠ fale≈°n√Ωm p≈ôechod≈Øm

    # Akce: ulo≈æ√≠ posledn√≠ komfortn√≠ teplotu do helperu
    action:
      # ‚úÖ Nejprve ovƒõ≈ô√≠, ≈æe se komfortn√≠ teplota skuteƒçnƒõ zmƒõnila (¬±0.1 ¬∞C)
      - condition: template
        value_template: >
          {{ ((states('input_number.2p_mama_last_comfort') | float) - (new_set | float)) | abs > 0.1 }}

      - service: input_number.set_value                       # Z√°pis hodnoty do input_number (ulo≈æen√≠ nov√© komfortn√≠ teploty)
        target:
          entity_id: input_number.2p_mama_last_comfort  # C√≠lov√Ω helper (komfortn√≠ teplota)
        data:
          value: "{{ new_set }}"                               # Hodnota = aktu√°lnƒõ nastaven√° teplota

      # ü™∂ Logov√°n√≠ pro p≈ôehled (ulo≈æen√≠ nov√© komfortn√≠ teploty do Logbooku)
      - service: logbook.log
        data:
          name: "2.P M√°ma"                               # N√°zev v logu
          message: "Ulo≈æena komfortn√≠ teplota: {{ new_set }} ¬∞C"  # Zpr√°va do Logbooku
          entity_id: climate.danfoss_etrv0103_2                  # K jak√© entitƒõ se vztahuje