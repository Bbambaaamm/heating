# =====================================================================
# 🧲 1. patro – Kuchyň: zachytávání poslední KOMFORTNÍ teploty
# ---------------------------------------------------------------------
# 🔍 Cíl:
# Tato automatizace sleduje, kdy Michal ručně (nebo přes rozvrh)
# změní teplotu na hlavici. Pokud nová hodnota odpovídá komfortnímu
# režimu (tj. je vyšší než ECO teplota), uloží se do helperu
# `input_number.prizemi_michal_last_comfort`.
#
# ➕ Díky tomu se při návratu z ECO módu (např. po odchodu nebo v noci)
# může automaticky obnovit právě ta poslední komfortní teplota,
# kterou uživatel naposledy použil.
# =====================================================================

automation:
  - alias: "Zachytni poslední komfort – 1. patro Kuchyň" # Název automatizace
    id: capture_last_comfort_1p_jidelna # Jednoznačné ID pro systém
    mode: restart # Restartne běh při nové změně
    initial_state: true # Automatizace je aktivní po restartu HA

    # Spouštěč: reaguje na změnu žádané teploty na hlavici
    triggers:
      - trigger: state # Sleduje změnu stavu/atributu
        entity_id: climate.1p_jidelna # Cílová hlavice (Michal – přízemí)
        attribute: temperature # Sledujeme atribut „temperature“ (žádaná teplota)

    # Proměnné pro výpočet
    variables:
      new_set: "{{ state_attr('climate.1p_jidelna', 'temperature') | float(0) }}" # Nově nastavená teplota
      eco: "{{ states('input_number.eco_temp_default') | float(18) }}" # ECO teplota z globálního helperu

    # Podmínka: ukládá se pouze komfortní teplota (větší než ECO + 0.2 °C)
    condition:
      - condition: template
        value_template: "{{ new_set >= (eco + 0.2) }}" # Hystereze 0.2 °C brání falešným přechodům

    # Akce: uloží poslední komfortní teplotu do helperu
    action:
      # ✅ Nejprve ověří, že se komfortní teplota skutečně změnila (±0.1 °C)
      - condition: template
        value_template: >
          {{ ((states('input_number.1p_jidelna_last_comfort') | float) - (new_set | float)) | abs > 0.1 }}

      - action: input_number.set_value # Zápis hodnoty do input_number (uložení nové komfortní teploty)
        target:
          entity_id: input_number.1p_jidelna_last_comfort # Cílový helper (komfortní teplota)
        data:
          value: "{{ new_set }}" # Hodnota = aktuálně nastavená teplota

      # 🪶 Logování pro přehled (uložení nové komfortní teploty do Logbooku)
      - action: logbook.log
        data:
          name: "1.patro Kuchyň" # Název v logu
          message: "Uložena komfortní teplota: {{ new_set }} °C" # Zpráva do Logbooku
          entity_id: climate.1p_jidelna # K jaké entitě se vztahuje
