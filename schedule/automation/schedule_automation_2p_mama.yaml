# =====================================================================
# 🕒 ROZVRH 2P MÁMA – Inteligentní (spouští jen při změně)
# =====================================================================

automation:
  - alias: "Rozvrh 2P Máma – inteligentní spouštění"
    id: schedule_2p_mama_smart
    mode: restart
    initial_state: true

    trigger:
      # ▶️ Když nastane čas startu nebo konce rozvrhu
      - platform: time
        at:
          - input_datetime.mama_weekday_start
          - input_datetime.mama_weekday_end
          - input_datetime.mama_weekend_start
          - input_datetime.mama_weekend_end

      # ▶️ Když někdo změní časy nebo povolení rozvrhu
      - platform: state
        entity_id:
          - input_datetime.mama_weekday_start
          - input_datetime.mama_weekday_end
          - input_datetime.mama_weekend_start
          - input_datetime.mama_weekend_end
          - input_boolean.schedule_enable_2p_mama

      # ▶️ Když uživatel změní teplotu na hlavici ručně
      - platform: state
        entity_id: climate.danfoss_etrv0103_2
        attribute: temperature

    variables:
      eco_temp: "{{ states('input_number.eco_temp_default') | float(18) }}"
      last_comfort: "{{ states('input_number.2p_mama_last_comfort') | float(21) }}"

      # 🧭 Dnešní start/end podle dne v týdnu
      start: >
        {% if now().isoweekday() in [1,2,3,4,5] %}
          {{ states('input_datetime.mama_weekday_start') }}
        {% else %}
          {{ states('input_datetime.mama_weekend_start') }}
        {% endif %}
      end: >
        {% if now().isoweekday() in [1,2,3,4,5] %}
          {{ states('input_datetime.mama_weekday_end') }}
        {% else %}
          {{ states('input_datetime.mama_weekend_end') }}
        {% endif %}
      now_hms: "{{ now().strftime('%H:%M:%S') }}"

      # 🧮 Jsme uvnitř okna? (řeší i přes půlnoc)
      in_window: >
        {% set s = start %}
        {% set e = end %}
        {% set n = now_hms %}
        {% if s <= e %}
          {{ s <= n < e }}
        {% else %}
          {{ (n >= s) or (n < e) }}
        {% endif %}

    condition:
      - condition: state
        entity_id: input_boolean.schedule_enable_2p_mama
        state: "on"

    action:
      - choose:

          # 🟢 KOMFORTNÍ OKNO
          - conditions:
              - condition: template
                value_template: >
                  {% set now = now().strftime('%H:%M:%S') %}
                  {{ (now >= start and now < end)
                     or (end < start and (now >= start or now < end)) }}
            sequence:
              - service: climate.set_hvac_mode
                target: { entity_id: climate.danfoss_etrv0103_2 }
                data: { hvac_mode: heat }
              - service: climate.set_temperature
                target: { entity_id: climate.danfoss_etrv0103_2 }
                data:
                  temperature: "{{ last_comfort }}"
              - service: logbook.log
                data:
                  name: "Rozvrh 2P Máma"
                  message: "Komfortní režim {{ last_comfort }} °C (inteligentní spuštění)"
                  entity_id: climate.danfoss_etrv0103_2

          # 🌿 MIMO OKNO
          - conditions:
              - condition: template
                value_template: >
                  {% set now = now().strftime('%H:%M:%S') %}
                  {{ not ((now >= start and now < end)
                     or (end < start and (now >= start or now < end))) }}
            sequence:
              - service: climate.set_hvac_mode
                target: { entity_id: climate.danfoss_etrv0103_2 }
                data: { hvac_mode: heat }
              - service: climate.set_temperature
                target: { entity_id: climate.danfoss_etrv0103_2 }
                data:
                  temperature: "{{ eco_temp }}"
              - service: logbook.log
                data:
                  name: "Rozvrh 1P Kuchyň"
                  message: "ECO {{ eco_temp }} °C (inteligentní spuštění)"
                  entity_id: climate.danfoss_etrv0103_2

# =====================================================================
# 💾 CAPTURE – ulož poslední KOMFORT pro 1. patro (Kuchyň)
# - Uloží se POUZE hodnoty nad ECO (aby ECO nepřepsalo komfort)
# =====================================================================
  - alias: "2P Máma – uložit poslední komfort"
    id: capture_2p_mama_last_comfort
    mode: queued
    trigger:
      - platform: state
        entity_id: climate.danfoss_etrv0103_2
        attribute: temperature
    condition:
      - condition: template
        value_template: >
          {{ state_attr('climate.danfoss_etrv0103_2', 'temperature') | float(0)
             > (states('input_number.eco_temp_default') | float(18)) + 0.2 }}
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.1p_kuchyn_last_comfort
        data:
          value: "{{ state_attr('climate.danfoss_etrv0103_2', 'temperature') | float(21.5) }}"
      - service: logbook.log
        data:
          name: "1P Kuchyň"
          message: "Uložena komfortní teplota: {{ state_attr('climate.danfoss_etrv0103_2', 'temperature') }} °C"
