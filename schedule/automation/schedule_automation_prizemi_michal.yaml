# =====================================================================
# 📅 Rozvrh – Přízemí (Michal) – dynamická aktualizace (V2, opravené logování)
# - Vyhodnocuje komfort/ECO každou minutu a při změně rozvrhových entit
# - START okna → nastaví poslední uživatelskou teplotu (sensor.prizemi_michal_last_set)
# - KONEC okna → nastaví ECO teplotu (input_number.eco_temp_default)
# - Porovnávání času děláme robustně přes today_at() + hour/minute atributy
# - Logování do Logbooku pomocí služby logbook.log (žádné log_message)
# =====================================================================

automation:
  - alias: "Rozvrh Michal – dynamická aktualizace"
    id: schedule_michal_dynamic_v2
    mode: restart
    initial_state: true
    description: >
      Vyhodnocuje komfort/ECO podle rozvrhu Přízemí – Michal. Spouští se každou minutu
      i při změně času/enable/ECO/last_set. Ošetřuje intervaly přes půlnoc.

    # 🛎️ Spouštěče: každá minuta + změna relevantních entit
    trigger:
      - platform: time_pattern
        minutes: "/1"
      - platform: state
        entity_id:
          - input_datetime.prizemi_michal_weekday_start
          - input_datetime.prizemi_michal_weekday_end
          - input_datetime.prizemi_michal_weekend_start
          - input_datetime.prizemi_michal_weekend_end
          - input_boolean.schedule_enable_prizemi_michal
          - input_number.eco_temp_default
          - sensor.prizemi_michal_last_set

    # 📦 Vypočítané proměnné (každé spuštění)
    variables:
      # 🔀 Vyber správné entity start/end podle dne (1–5 pracovní den)
      start_ent: >
        {% if now().isoweekday() in [1,2,3,4,5] %}
          input_datetime.prizemi_michal_weekday_start
        {% else %}
          input_datetime.prizemi_michal_weekend_start
        {% endif %}
      end_ent: >
        {% if now().isoweekday() in [1,2,3,4,5] %}
          input_datetime.prizemi_michal_weekday_end
        {% else %}
          input_datetime.prizemi_michal_weekend_end
        {% endif %}

      # ⏱️ Vyrob dnešní datové časy start/end z H/M atributů (funguje i bez data)
      start_dt: >
        {% set sh = state_attr(start_ent, 'hour')   | int(0) %}
        {% set sm = state_attr(start_ent, 'minute') | int(0) %}
        {{ today_at('{:02d}:{:02d}:00'.format(sh, sm)) }}
      end_dt: >
        {% set eh = state_attr(end_ent, 'hour')   | int(0) %}
        {% set em = state_attr(end_ent, 'minute') | int(0) %}
        {{ today_at('{:02d}:{:02d}:00'.format(eh, em)) }}
      now_dt: "{{ now() }}"

      # 🌿 ECO a poslední komfortní teplota
      eco_temp: "{{ states('input_number.eco_temp_default') | float(18) }}"
      last_set: "{{ states('input_number.prizemi_michal_last_comfort') | float(21.5) }}"

      # 📏 Jsme uvnitř okna? (řeší i případ přes půlnoc)
      in_window: >
        {% if start_dt <= end_dt %}
          {{ start_dt <= now_dt < end_dt }}
        {% else %}
          {{ (now_dt >= start_dt) or (now_dt < end_dt) }}
        {% endif %}

    # ✅ Rozvrh pro zónu musí být povolen
    condition:
      - condition: state
        entity_id: input_boolean.schedule_enable_prizemi_michal
        state: "on"

    # ▶️ Akce podle toho, zda jsme v okně (komfort) nebo mimo (ECO)
    action:
      - choose:
          # 🟢 UVNITŘ OKNA → komfortní teplota = poslední uživatelská
          - conditions:
              - condition: template
                value_template: "{{ in_window }}"
            sequence:
              - service: climate.set_hvac_mode
                target:
                  entity_id: climate.danfoss_etrv0103
                data:
                  hvac_mode: heat
              - service: climate.set_temperature
                target:
                  entity_id: climate.danfoss_etrv0103
                data:
                  temperature: "{{ last_set }}"
              - service: logbook.log
                data:
                  name: "Rozvrh Michal"
                  message: "START/UVNITŘ OKNA → nastavena komfortní {{ last_set }} °C"
                  entity_id: climate.danfoss_etrv0103

          # 🌿 MIMO OKNO → ECO teplota
          - conditions:
              - condition: template
                value_template: "{{ not in_window }}"
            sequence:
              - service: climate.set_hvac_mode
                target:
                  entity_id: climate.danfoss_etrv0103
                data:
                  hvac_mode: heat
              - service: climate.set_temperature
                target:
                  entity_id: climate.danfoss_etrv0103
                data:
                  temperature: "{{ eco_temp }}"
              - service: logbook.log
                data:
                  name: "Rozvrh Michal"
                  message: "KONEC/MIMO OKNO → nastavena ECO {{ eco_temp }} °C"
                  entity_id: climate.danfoss_etrv0103
