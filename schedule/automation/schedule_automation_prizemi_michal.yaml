# =====================================================================
# 🕒 ROZVRH – Přízemí (Michal) – inteligentní spouštění
# - Spíná POUZE při změně (čas start/konec, změna rozvrhu, ruční změna setpointu)
# - Uvnitř okna → nastaví poslední komfortní teplotu (input_number.prizemi_michal_last_comfort)
# - Mimo okno   → nastaví ECO teplotu (input_number.eco_temp_default)
# - NEposílá nic každou minutu → klidné hlavice, čisté logy
# =====================================================================

automation:
  - alias: "Rozvrh Přízemí – inteligentní spouštění"
    id: schedule_prizemi_michal_smart
    mode: restart
    initial_state: true

    # 🔔 Spouštěče: jen skutečné změny (žádný time_pattern každou minutu)
    trigger:
      # ▶️ Nastal čas startu nebo konce (funguje i pro time-only input_datetime)
      - platform: time
        at:
          - input_datetime.prizemi_michal_weekday_start
          - input_datetime.prizemi_michal_weekday_end
          - input_datetime.prizemi_michal_weekend_start
          - input_datetime.prizemi_michal_weekend_end

      # ▶️ Někdo upravil časy / povolení rozvrhu
      - platform: state
        entity_id:
          - input_datetime.prizemi_michal_weekday_start
          - input_datetime.prizemi_michal_weekday_end
          - input_datetime.prizemi_michal_weekend_start
          - input_datetime.prizemi_michal_weekend_end
          - input_boolean.schedule_enable_prizemi_michal

      # ▶️ Uživatel změnil setpoint na hlavici (abychom uměli hned zareagovat, pokud jsme „uvnitř okna“)
      - platform: state
        entity_id: climate.danfoss_etrv0103
        attribute: temperature

    # 📦 Pomocné proměnné – vyber správné časy podle dne + načti ECO/poslední KOMFORT
    variables:
      eco_temp: "{{ states('input_number.eco_temp_default') | float(18) }}"
      last_comfort: "{{ states('input_number.prizemi_michal_last_comfort') | float(21.5) }}"

      start: >
        {% if now().isoweekday() in [1,2,3,4,5] %}
          {{ states('input_datetime.prizemi_michal_weekday_start') }}
        {% else %}
          {{ states('input_datetime.prizemi_michal_weekend_start') }}
        {% endif %}
      end: >
        {% if now().isoweekday() in [1,2,3,4,5] %}
          {{ states('input_datetime.prizemi_michal_weekday_end') }}
        {% else %}
          {{ states('input_datetime.prizemi_michal_weekend_end') }}
        {% endif %}
      now_hms: "{{ now().strftime('%H:%M:%S') }}"

      # 🧮 Jsme uvnitř okna? (řeší i přes půlnoc)
      in_window: >
        {% set s = start %}
        {% set e = end %}
        {% set n = now_hms %}
        {% if s <= e %}
          {{ s <= n < e }}
        {% else %}
          {{ (n >= s) or (n < e) }}
        {% endif %}

    # ✅ Rozvrh této zóny musí být povolen
    condition:
      - condition: state
        entity_id: input_boolean.schedule_enable_prizemi_michal
        state: "on"

    # ▶️ Jednorázová akce podle toho, kde právě jsme vzhledem k oknu
    action:
      - choose:
          # 🟢 Uvnitř okna → komfortní teplota
          - conditions:
              - condition: template
                value_template: "{{ in_window }}"
            sequence:
              - service: climate.set_hvac_mode
                target: { entity_id: climate.danfoss_etrv0103 }
                data: { hvac_mode: heat }
              - service: climate.set_temperature
                target: { entity_id: climate.danfoss_etrv0103 }
                data:
                  temperature: "{{ last_comfort }}"
              - service: logbook.log
                data:
                  name: "Rozvrh Přízemí"
                  message: "Komfortní režim {{ last_comfort }} °C (inteligentní spuštění)"
                  entity_id: climate.danfoss_etrv0103

          # 🌿 Mimo okno → ECO teplota
          - conditions:
              - condition: template
                value_template: "{{ not in_window }}"
            sequence:
              - service: climate.set_hvac_mode
                target: { entity_id: climate.danfoss_etrv0103 }
                data: { hvac_mode: heat }
              - service: climate.set_temperature
                target: { entity_id: climate.danfoss_etrv0103 }
                data:
                  temperature: "{{ eco_temp }}"
              - service: logbook.log
                data:
                  name: "Rozvrh Přízemí"
                  message: "ECO {{ eco_temp }} °C (inteligentní spuštění)"
                  entity_id: climate.danfoss_etrv0103
