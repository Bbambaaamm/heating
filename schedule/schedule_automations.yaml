# =====================================================================
# ROZVRH – zóny: Přízemí (Michal), 1. patro (Kuchyň), 2. patro (Máma)
# ---------------------------------------------------------------------
# Cíl:
# Nastavit teplotu hlavic podle rozvrhových entit schedule.*.
# Spouští se při skutečné změně (schedule on/off) a po startu HA.
#
# Uvnitř okna rozvrhu: komfortní teplota (sensor.*_comfort_temp)
# Mimo okno rozvrhu:   ECO teplota (sensor.*_eco_temp)
# Pozn.: senzory comfort/eco už obsahují případné ořezy, proto zde
# neřešíme logiku komfortu/ECO – pouze aplikaci teplot.
# =====================================================================

automation:
# =====================================================================
# ── Přízemí – Michal ─────────────────────────────────────────────────
# =====================================================================
  - id: schedule_prizemi_michal_follow
    alias: "Rozvrh: Přízemí Michal → nastav teplotu"
    mode: restart                                                                             # při nové změně rozvrhu přepiš předchozí běh
    trigger:
      - platform: state                                                                       # reaguje na zapnutí/vypnutí rozvrhu
        entity_id: schedule.zona_prizemi_michal_komfort
      - platform: homeassistant                                                               # po startu HA znovu nastav teplotu
        event: start
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.platform == 'homeassistant' }}"
            sequence:
              - delay: "00:00:03"                                                             # počkej 3 s po startu HA (na načtení entit)

      - variables:
          is_on: "{{ is_state('schedule.zona_prizemi_michal_komfort','on') }}"                # stav rozvrhu: komfort ano/ne
          comfort: "{{ states('sensor.zona_prizemi_michal_comfort_temp') | float(22) }}"      # komfortní teplota
          eco: "{{ states('sensor.zona_prizemi_michal_eco_temp') | float(19) }}"              # ECO teplota
          current: "{{ state_attr('climate.danfoss_etrv0103','temperature') | float(0) }}"    # aktuální nastavená teplota
          hvac: "{{ states('climate.danfoss_etrv0103') | lower }}"                            # aktuální režim (heat/off)
          target_temp: "{{ comfort if is_on else eco }}"                                      # cílová teplota podle rozvrhu

      - condition: template
        value_template: "{{ target_temp | float(0) > 0 }}"                                    # kontrola, že cílová teplota není null/0

      - choose:
          - conditions:
              - condition: template
                value_template: "{{ hvac != 'heat' }}"                                        # pokud není zapnut režim topení
            sequence:
              - service: climate.set_hvac_mode
                target: { entity_id: climate.danfoss_etrv0103 }
                data: { hvac_mode: heat }                                                     # přepni hlavici do režimu topení

      - condition: template
        value_template: "{{ (current - target_temp) | abs > 0.1 }}"                           # posílej jen, pokud se teplota opravdu liší

      - service: climate.set_temperature
        target: { entity_id: climate.danfoss_etrv0103 }                                       # cílová hlavice (Michal – přízemí)
        data: { temperature: "{{ target_temp }}" }                                            # nastav cílovou teplotu

# =====================================================================
# ── 1. patro – Kuchyň ────────────────────────────────────────────────
# =====================================================================

  - id: schedule_1p_kuchyn_follow
    alias: "Rozvrh: 1. patro Kuchyň → nastav teplotu"
    mode: restart
    trigger:
      - platform: state
        entity_id: schedule.zona_1p_kuchyn_komfort
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.platform == 'homeassistant' }}"
            sequence:
              - delay: "00:00:03"                                                             # 3 s po startu HA

      - variables:
          is_on: "{{ is_state('schedule.zona_1p_kuchyn_komfort','on') }}"                     # rozvrh zapnut?
          comfort: "{{ states('sensor.zona_1p_kuchyn_comfort_temp') | float(22) }}"           # komfortní teplota
          eco: "{{ states('sensor.zona_1p_kuchyn_eco_temp') | float(19) }}"                   # ECO teplota
          current: "{{ state_attr('climate.1_patro_kuchyn','temperature') | float(0) }}"      # aktuální teplota
          hvac: "{{ states('climate.1_patro_kuchyn') | lower }}"                              # režim heat/off
          target_temp: "{{ comfort if is_on else eco }}"                                      # cílová teplota

      - condition: template
        value_template: "{{ target_temp | float(0) > 0 }}"                                    # validní hodnota teploty?

      - choose:
          - conditions:
              - condition: template
                value_template: "{{ hvac != 'heat' }}"                                        # přepni na topení, pokud není aktivní
            sequence:
              - service: climate.set_hvac_mode
                target: { entity_id: climate.1_patro_kuchyn }
                data: { hvac_mode: heat }

      - condition: template
        value_template: "{{ (current - target_temp) | abs > 0.1 }}"                           # aktualizuj jen, pokud se změnila hodnota

      - service: climate.set_temperature
        target: { entity_id: climate.1_patro_kuchyn }                                         # cílová hlavice (1. patro – kuchyň)
        data: { temperature: "{{ target_temp }}" }

# =====================================================================
# ── 2. patro – Máma ──────────────────────────────────────────────────
# =====================================================================

  - id: schedule_2p_mama_follow
    alias: "Rozvrh: 2. patro Máma → nastav teplotu"
    mode: restart
    trigger:
      - platform: state
        entity_id: schedule.zona_2p_mama_komfort
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.platform == 'homeassistant' }}"
            sequence:
              - delay: "00:00:03"                                                             # 3 s po startu HA

      - variables:
          is_on: "{{ is_state('schedule.zona_2p_mama_komfort','on') }}"                       # stav rozvrhu (komfort/ECO)
          comfort: "{{ states('sensor.zona_2p_mama_comfort_temp') | float(22) }}"             # komfortní teplota
          eco: "{{ states('sensor.zona_2p_mama_eco_temp') | float(19) }}"                     # ECO teplota
          current: "{{ state_attr('climate.danfoss_etrv0103_2','temperature') | float(0) }}"  # aktuální setpoint
          hvac: "{{ states('climate.danfoss_etrv0103_2') | lower }}"                          # aktuální režim hlavice
          target_temp: "{{ comfort if is_on else eco }}"                                      # cílová teplota podle rozvrhu

      - condition: template
        value_template: "{{ target_temp | float(0) > 0 }}"                                    # kontrola, že je hodnota platná

      - choose:
          - conditions:
              - condition: template
                value_template: "{{ hvac != 'heat' }}"                                        # nastav režim heat, pokud není aktivní
            sequence:
              - service: climate.set_hvac_mode
                target: { entity_id: climate.danfoss_etrv0103_2 }
                data: { hvac_mode: heat }

      - condition: template
        value_template: "{{ (current - target_temp) | abs > 0.1 }}"                           # posílej jen, když se teplota liší

      - service: climate.set_temperature
        target: { entity_id: climate.danfoss_etrv0103_2 }                                     # cílová hlavice (2. patro – máma)
        data: { temperature: "{{ target_temp }}" }
