# =====================================================================
# üîå KOTEL ‚Äì PRAHY + ≈ò√çZEN√ç REL√â (Aqara T2)
# - Zapnout: master ON ‚àß re≈æim ‚â† Off ‚àß (min. aktivn√≠ch z√≥n) ‚àß (min. pr≈Ømƒõrn√° popt√°vka)
# - Vypnout: master OFF ‚à® re≈æim Off ‚à® (pr√°hy nesplnƒõny)
# - Anti-cycling: on/off delay + re-check po zpo≈ædƒõn√≠
# =====================================================================

# -----------------------------
# ‚úÖ PRAHOV√â BIN√ÅRN√ç SENZORY
# -----------------------------
template:
  - binary_sensor:

      # Splnƒõno: minim√°ln√≠ poƒçet aktivn√≠ch z√≥n
      - name: "kotel_threshold_min_active_zones_ok"
        unique_id: kotel_threshold_min_active_zones_ok
        state: >
          {% set aktivni = states('sensor.kotel_aktivni_zony_pocet') | int(0) %}
          {% set min_zony = states('input_number.kotel_min_active_zones') | int(1) %}
          {{ aktivni >= min_zony }}
        device_class: connectivity

      # Splnƒõno: minim√°ln√≠ pr≈Ømƒõrn√° popt√°vka aktivn√≠ch z√≥n (%)
      - name: "kotel_threshold_min_avg_demand_ok"
        unique_id: kotel_threshold_min_avg_demand_ok
        state: >
          {% set avg = states('sensor.kotel_poptavka_prumer') | float(0) %}
          {% set min_avg = states('input_number.kotel_min_avg_demand_pct') | float(15) %}
          {{ avg >= min_avg }}
        device_class: connectivity

      # üîÅ HLAVN√ç PR√ÅH ‚Äì V≈†ECHNY PODM√çNKY MUS√ç PLATIT (AND)
      # (d≈ô√≠ve to bylo OR ‚Üí zp≈Øsobovalo zbyteƒçn√© sepnut√≠ p≈ôi mal√© popt√°vce)
      - name: "kotel_threshold_any_ok"
        unique_id: kotel_threshold_all_ok   # ID m≈Ø≈æe z≈Østat jin√©; entity_id z≈Østane podle name
        icon: mdi:checkbox-marked-circle
        state: >
          {{ is_state('binary_sensor.kotel_threshold_min_active_zones_ok','on')
             and is_state('binary_sensor.kotel_threshold_min_avg_demand_ok','on') }}

# -----------------------------
# ‚öôÔ∏è AUTOMATIZACE (BEZE ZMƒöNY)
# -----------------------------
automation:

  # ---------------------------------------------------------------
  # ‚ñ∂Ô∏è ZAPNOUT KOTEL
  # ---------------------------------------------------------------
  - id: kotel_turn_on_by_policy
    alias: "Kotel: zapnout p≈ôi splnƒõn√≠ politiky"
    description: "Zapne rel√© kotle po zpo≈ædƒõn√≠, pokud plat√≠ prahy a nen√≠ blokace."
    mode: restart  # nov√° zmƒõna zru≈°√≠ p≈ôedchoz√≠ bƒõh (aby se delay nep≈ôekr√Ωval)

    trigger:
      - platform: state
        entity_id:
          - binary_sensor.kotel_threshold_any_ok
          - binary_sensor.kotel_mode_off_block
          - input_boolean.topny_system_enable
          - input_select.topny_rezim
          - input_boolean.boost_now
          - input_datetime.boost_until
          - input_number.kotel_on_delay_sec
          - sensor.kotel_aktivni_zony_pocet
          - sensor.kotel_poptavka_prumer
          - sensor.kotel_poptavka_max

    # Zapneme, kdy≈æ:
    # - master je ON
    # - re≈æim nen√≠ Off (tj. kotel_mode_off_block == off)
    # - a (min. aktivn√≠ z√≥ny) ‚àß (min. pr≈Ømƒõrn√° popt√°vka)
    condition:
      - condition: state
        entity_id: input_boolean.topny_system_enable
        state: "on"
      - condition: state
        entity_id: binary_sensor.kotel_mode_off_block
        state: "off"
      - condition: state
        entity_id: binary_sensor.kotel_threshold_any_ok
        state: "on"

    action:
      # ‚è≥ Anti-cycling zpo≈ædƒõn√≠ (konfigurovateln√©)
      - delay:
          seconds: "{{ states('input_number.kotel_on_delay_sec') | int(0) }}"

      # ‚úÖ Re-check po zpo≈ædƒõn√≠
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.topny_system_enable
                state: "on"
              - condition: state
                entity_id: binary_sensor.kotel_mode_off_block
                state: "off"
              - condition: state
                entity_id: binary_sensor.kotel_threshold_any_ok
                state: "on"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.aqara_lumi_switch_acn047_spinac

  # ---------------------------------------------------------------
  # ‚èπ VYPNOUT KOTEL
  # ---------------------------------------------------------------
  - id: kotel_turn_off_by_policy
    alias: "Kotel: vypnout p≈ôi nesplnƒõn√≠ politiky / blokaci"
    description: "Vypne rel√© kotle po zpo≈ædƒõn√≠, kdy≈æ prahy neplat√≠, re≈æim je Off, nebo master OFF."
    mode: restart

    trigger:
      - platform: state
        entity_id:
          - binary_sensor.kotel_threshold_any_ok
          - binary_sensor.kotel_mode_off_block
          - input_boolean.topny_system_enable
          - input_select.topny_rezim
          - input_boolean.boost_now
          - input_datetime.boost_until
          - input_number.kotel_off_delay_sec
          - sensor.kotel_aktivni_zony_pocet
          - sensor.kotel_poptavka_prumer
          - sensor.kotel_poptavka_max

    condition: []

    action:
      - choose:
          # ‚õî Master OFF
          - conditions:
              - condition: state
                entity_id: input_boolean.topny_system_enable
                state: "off"
            sequence:
              - delay:
                  seconds: "{{ states('input_number.kotel_off_delay_sec') | int(0) }}"
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: input_boolean.topny_system_enable
                        state: "off"
                    sequence:
                      - service: switch.turn_off
                        target:
                          entity_id: switch.aqara_lumi_switch_acn047_spinac

          # ‚õî Re≈æim Off
          - conditions:
              - condition: state
                entity_id: binary_sensor.kotel_mode_off_block
                state: "on"
            sequence:
              - delay:
                  seconds: "{{ states('input_number.kotel_off_delay_sec') | int(0) }}"
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: binary_sensor.kotel_mode_off_block
                        state: "on"
                    sequence:
                      - service: switch.turn_off
                        target:
                          entity_id: switch.aqara_lumi_switch_acn047_spinac

          # ‚õî Nesplnƒõn√© prahy
          - conditions:
              - condition: state
                entity_id: binary_sensor.kotel_threshold_any_ok
                state: "off"
            sequence:
              - delay:
                  seconds: "{{ states('input_number.kotel_off_delay_sec') | int(0) }}"
              - choose:
                  - conditions:
                      - condition: state
                        entity_id: binary_sensor.kotel_threshold_any_ok
                        state: "off"
                    sequence:
                      - service: switch.turn_off
                        target:
                          entity_id: switch.aqara_lumi_switch_acn047_spinac
