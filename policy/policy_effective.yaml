# =====================================================================
# 🧮 Effective prahy – odvozené z režimu (Auto/Eco/Boost/Off)
# - V OFF režimu nastavíme prahy tak, aby NIKDY nezapnulo (∞/∞).
# - V ECO prahy zpřísníme (menší šance zapnout).
# - V BOOST prahy uvolníme (větší šance zapnout rychleji).
# - V AUTO použijeme přímo konfigurované hodnoty.
# - Současně připravíme binární "splněno/nesplněno" vůči aktuálním hodnotám.
# =====================================================================

template:

  - sensor:
      # → efektivní průměrná poptávka (%) podle režimu
      - name: "kotel_effective_min_avg_demand_pct"
        unit_of_measurement: "%"
        state: >
          {% set base = states('input_number.kotel_min_avg_demand_pct')|int(15) %}
          {% set mode = states('input_select.topny_rezim') %}
          {% if mode == 'Off' %} 999
          {% elif mode == 'Eco' %} {{ [base + 10, 100] | min }}    {# zpřísnit o +10 % #}
          {% elif mode == 'Boost' %} {{ [base - 10, 0] | max }}    {# povolit o -10 % #}
          {% else %} {{ base }}                                     {# Auto #}
          {% endif %}

      # → efektivní min. aktivních zón podle režimu
      - name: "kotel_effective_min_active_zones"
        state: >
          {% set base = states('input_number.kotel_min_active_zones')|int(2) %}
          {% set mode = states('input_select.topny_rezim') %}
          {% if mode == 'Off' %} 99
          {% elif mode == 'Eco' %} {{ base + 1 }}                 {# zpřísnit #}
          {% elif mode == 'Boost' %} {{ [base - 1, 0] | max }}    {# povolit #}
          {% else %} {{ base }}                                   {# Auto #}
          {% endif %}

      # → efektivní zpoždění zapnutí/vypnutí (můžeš měnit dle chuti pro režimy)
      - name: "kotel_effective_on_delay_sec"
        unit_of_measurement: s
        state: >
          {% set base = states('input_number.kotel_on_delay_sec')|int(120) %}
          {% set mode = states('input_select.topny_rezim') %}
          {% if mode == 'Boost' %} {{ [base - 60, 0] | max }}     {# v Boost kratší #}
          {% else %} {{ base }}
          {% endif %}

      - name: "kotel_effective_off_delay_sec"
        unit_of_measurement: s
        state: >
          {% set base = states('input_number.kotel_off_delay_sec')|int(300) %}
          {% set mode = states('input_select.topny_rezim') %}
          {% if mode == 'Eco' %} {{ base + 60 }}                  {# v Eco delší setrvačnost #}
          {% else %} {{ base }}
          {% endif %}

  - binary_sensor:
      # → je splněn prah „počet aktivních zón“ ?
      - name: "kotel_threshold_ok_active_zones"
        state: >
          {{ (states('sensor.kotel_aktivni_zony_pocet')|int(0)) >=
             (states('sensor.kotel_effective_min_active_zones')|int(99)) }}

      # → je splněn prah „průměrná poptávka“ ?
      - name: "kotel_threshold_ok_avg_demand"
        state: >
          {{ (states('sensor.kotel_poptavka_prumer')|float(0)) >=
             (states('sensor.kotel_effective_min_avg_demand_pct')|float(999)) }}

      # → celkově splněno pro zapnutí? (ANY – počet ZÓN nebo AVG poptávka)
      - name: "kotel_threshold_any_ok"
        state: >
          {{ is_state('binary_sensor.kotel_threshold_ok_active_zones','on')
             or is_state('binary_sensor.kotel_threshold_ok_avg_demand','on') }}

      # → režim OFF násilně blokuje chod
      - name: "kotel_mode_off_block"
        state: >
          {{ is_state('input_select.topny_rezim','Off') }}
